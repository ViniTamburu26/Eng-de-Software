trigger: none  

pool:
  name: 'Pool-Self'  # Utilizando um agente self-hosted

stages:
- stage: BuildAndValidate
  displayName: 'Construção e Validação do MVP'
  jobs:
  - job: BuildFrontend
    displayName: 'Construção do Frontend (Vue.js)'
    steps:
    - script: |
        echo "Iniciando a construção do frontend Vue.js"
        npm install
        npm run build
      displayName: 'Instalação e Build do Frontend Vue.js'
    
    - script: echo "Frontend Vue.js construído com sucesso!"
      displayName: 'Confirmação de Build bem-sucedido'

  - job: ValidateArchitecture
    displayName: 'Validação das Camadas da Arquitetura'
    steps:
    - script: |
        echo "Validando camada de interface de usuário (frontend)"
        echo "Verificando se o frontend Vue.js está funcionando corretamente"
      displayName: 'Validação da Interface de Usuário'

    - script: |
        echo "Validando camada de lógica de aplicação"
        echo "Simulando a lógica da aplicação (ex: regras de negócio)"
      displayName: 'Validação da Lógica de Aplicação'

    - script: |
        echo "Validando camada de acesso a dados"
        echo "Simulando a integração com o backend mockado"
      displayName: 'Validação de Acesso a Dados (Mocked Backend)'

    - script: |
        echo "Validando camada de persistência de dados"
        echo "Simulação de persistência de dados"
      displayName: 'Validação de Persistência de Dados'

- stage: Finalization
  displayName: 'Finalização do Pipeline'
  dependsOn: BuildAndValidate
  jobs:
  - job: Complete
    displayName: 'Finalizando o Pipeline'
    steps:
    - script: echo "Todas as etapas foram concluídas com sucesso!"
      displayName: 'Finalização'
