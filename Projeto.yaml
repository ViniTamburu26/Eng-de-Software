trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  NODE_VERSION: '14.x'  # Versão do Node.js
  IONIC_VERSION: '6'     # Versão do Ionic
  BUILD_DIR: 'www'       # Diretório de saída da build do Ionic

jobs:
- job: Build
  displayName: 'Build Job'
  steps:
  - script: |
      echo "Instalando Node.js..."
      curl -sL https://deb.nodesource.com/setup_$NODE_VERSION -o nodesource_setup.sh
      sudo bash nodesource_setup.sh
      sudo apt-get install -y nodejs
    displayName: 'Instalar Node.js'

  - script: |
      echo "Instalando o Ionic CLI..."
      npm install -g @ionic/cli@${{ variables.IONIC_VERSION }}
    displayName: 'Instalar Ionic CLI'

  - script: |
      echo "Construindo a aplicação Ionic..."
      cd $(Build.SourcesDirectory)
      npm install
      ionic build --prod
    displayName: 'Construir Aplicação Ionic'

- job: Test
  displayName: 'Test Job'
  dependsOn: Build
  steps:
  - script: |
      echo "Executando testes..."
      cd $(Build.SourcesDirectory)
      npm test -- --watchAll=false
    displayName: 'Executar Testes'

- job: Deploy
  displayName: 'Deploy Job'
  dependsOn: Test
  steps:
  - script: |
      echo "Etapa de implantação (não aplicável para backend simulado)"
      # Se desejar, você pode adicionar comandos para implantar em um serviço de hospedagem
    displayName: 'Etapa de Implantação Simulada'